@prefix d2rq: <http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#> .
@prefix cmt: <http://cmt/> .
@prefix map: <http://mapping/> .
@prefix jdbc: <http://d2rq.org/terms/jdbc/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix base: </base/> .

map:database a d2rq:Database;
	d2rq:jdbcDriver "org.postgresql.Driver";
	d2rq:jdbcDSN "jdbc:postgresql://localhost:5432/normalized__strong_normalization__person_address";
	d2rq:username "lukaslaskowski";
	jdbc:keepAlive "3600";				# sends noop-query every 3600 seconds
	.

map:ClassMap_address a d2rq:ClassMap;
    d2rq:dataStorage map:database;
    d2rq:class base:address;
    d2rq:uriPattern "@@address.id@@/";
    
    
    .
map:ClassMap_person a d2rq:ClassMap;
    d2rq:dataStorage map:database;
    d2rq:class base:person;
    d2rq:uriPattern "@@person.id@@/";
    
    
    .
map:ClassMap_location a d2rq:ClassMap;
    d2rq:dataStorage map:database;
    d2rq:class base:location;
    d2rq:uriPattern "@@location.zip@@/";
    
    
    .
map:ClassMap_person_department a d2rq:ClassMap;
    d2rq:dataStorage map:database;
    d2rq:class base:person_department;
    d2rq:uriPattern "@@person_department.artificial_id@@/";
    
    
    .
map:ClassMap_department a d2rq:ClassMap;
    d2rq:dataStorage map:database;
    d2rq:class base:department;
    d2rq:uriPattern "@@department.id@@/";
    
    
    .
map:hasZip_ClassMap_address_ClassMap_location a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_address;
    d2rq:refersToClassMap map:ClassMap_location;
    d2rq:property base:hasZip;
    
    d2rq:join "location.zip = address.zip";
    .

map:hasDepartment_id_ClassMap_person_department_ClassMap_department a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_person_department;
    d2rq:refersToClassMap map:ClassMap_department;
    d2rq:property base:hasDepartment_id;
    
    d2rq:join "department.id = person_department.department_id";
    .

map:hasPerson_id_ClassMap_person_department_ClassMap_person a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_person_department;
    d2rq:refersToClassMap map:ClassMap_person;
    d2rq:property base:hasPerson_id;
    
    d2rq:join "person.id = person_department.person_id";
    .

map:hasAddress_id_ClassMap_person_ClassMap_address a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_person;
    d2rq:refersToClassMap map:ClassMap_address;
    d2rq:property base:hasAddress_id;
    
    d2rq:join "address.id = person.address_id";
    .

map:hasArtificial_id_ClassMap_person_department_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_person_department;
    d2rq:property base:hasArtificial_id;
    
    d2rq:column "person_department.artificial_id";
    .

map:hasAddress_id_ClassMap_person_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_person;
    d2rq:property base:hasAddress_id;
    
    d2rq:column "person.address_id";
    .

map:hasName_ClassMap_department_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_department;
    d2rq:property base:hasName;
    
    d2rq:column "department.name";
    .

map:hasId_ClassMap_address_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_address;
    d2rq:property base:hasId;
    
    d2rq:column "address.id";
    .

map:hasId_ClassMap_person_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_person;
    d2rq:property base:hasId;
    
    d2rq:column "person.id";
    .

map:hasEmail_ClassMap_person_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_person;
    d2rq:property base:hasEmail;
    
    d2rq:column "person.email";
    .

map:hasStreet_ClassMap_address_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_address;
    d2rq:property base:hasStreet;
    
    d2rq:column "address.street";
    .

map:hasZip_ClassMap_location_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_location;
    d2rq:property base:hasZip;
    
    d2rq:column "location.zip";
    .

map:hasLast_name_ClassMap_person_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_person;
    d2rq:property base:hasLast_name;
    
    d2rq:column "person.last_name";
    .

map:hasPerson_id_ClassMap_person_department_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_person_department;
    d2rq:property base:hasPerson_id;
    
    d2rq:column "person_department.person_id";
    .

map:hasFirst_name_ClassMap_person_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_person;
    d2rq:property base:hasFirst_name;
    
    d2rq:column "person.first_name";
    .

map:hasZip_ClassMap_address_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_address;
    d2rq:property base:hasZip;
    
    d2rq:column "address.zip";
    .

map:hasId_ClassMap_department_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_department;
    d2rq:property base:hasId;
    
    d2rq:column "department.id";
    .

map:hasState_ClassMap_location_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_location;
    d2rq:property base:hasState;
    
    d2rq:column "location.state";
    .

map:hasHouse_number_ClassMap_address_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_address;
    d2rq:property base:hasHouse_number;
    
    d2rq:column "address.house_number";
    .

map:hasDepartment_id_ClassMap_person_department_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_person_department;
    d2rq:property base:hasDepartment_id;
    
    d2rq:column "person_department.department_id";
    .

map:hasCity_ClassMap_location_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_location;
    d2rq:property base:hasCity;
    
    d2rq:column "location.city";
    .

