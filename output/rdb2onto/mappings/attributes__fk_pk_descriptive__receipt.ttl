@prefix d2rq: <http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#> .
@prefix cmt: <http://cmt/> .
@prefix map: <http://mapping/> .
@prefix jdbc: <http://d2rq.org/terms/jdbc/> .
@prefix base: </base/> .

map:database a d2rq:Database;
	d2rq:jdbcDriver "org.postgresql.Driver";
	d2rq:jdbcDSN "jdbc:postgresql://localhost:5432/attributes__fk_pk_descriptive__receipt";
	d2rq:username "lukaslaskowski";
	jdbc:keepAlive "3600";				# sends noop-query every 3600 seconds
	.

map:ClassMap_person a d2rq:ClassMap;
    d2rq:dataStorage map:database;
    d2rq:class base:person;
    d2rq:uriPattern "person/@@person.name@@/";
    
    
    .
map:ClassMap_receipt a d2rq:ClassMap;
    d2rq:dataStorage map:database;
    d2rq:class base:receipt;
    d2rq:uriPattern "receipt/@@receipt.id@@/";
    
    
    .
map:hasItem_ClassMap_receipt_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_receipt;
    d2rq:property base:hasItem;
    d2rq:column "receipt.item";
    .

map:hasName_ClassMap_person_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_person;
    d2rq:property base:hasName;
    d2rq:column "person.name";
    .

map:hasDate_ClassMap_receipt_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_receipt;
    d2rq:property base:hasDate;
    d2rq:column "receipt.date";
    .

map:hasId_ClassMap_receipt_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_receipt;
    d2rq:property base:hasId;
    d2rq:column "receipt.id";
    .

map:hasEmail_ClassMap_person_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_person;
    d2rq:property base:hasEmail;
    d2rq:column "person.email";
    .

map:hasReceived_by_ClassMap_receipt_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_receipt;
    d2rq:property base:hasReceived_by;
    d2rq:column "receipt.received_by";
    .

map:hasReceived_by_ClassMap_receipt_ClassMap_person a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_receipt;
    d2rq:refersToClassMap map:ClassMap_person;
    d2rq:property base:hasReceived_by;
    d2rq:join "person.name  =  receipt.received_by";
    .

