@prefix d2rq: <http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#> .
@prefix cmt: <http://cmt/> .
@prefix map: <http://mapping/> .
@prefix jdbc: <http://d2rq.org/terms/jdbc/> .
@prefix base: </base/> .

map:database a d2rq:Database;
	d2rq:jdbcDriver "org.postgresql.Driver";
	d2rq:jdbcDSN "jdbc:postgresql://localhost:5432/basic__relationship__movie_director_with_attributes";
	d2rq:username "lukaslaskowski";
	jdbc:keepAlive "3600";				# sends noop-query every 3600 seconds
	.

map:ClassMap_movie a d2rq:ClassMap;
    d2rq:dataStorage map:database;
    d2rq:class base:movie;
    d2rq:uriPattern "movie/@@movie.id@@/";
    
    
    .
map:ClassMap_director a d2rq:ClassMap;
    d2rq:dataStorage map:database;
    d2rq:class base:director;
    d2rq:uriPattern "director/@@director.name@@/";
    
    
    .
map:hasDirector_ClassMap_movie_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_movie;
    d2rq:property base:hasDirector;
    d2rq:column "movie.director";
    .

map:hasYear_ClassMap_movie_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_movie;
    d2rq:property base:hasYear;
    d2rq:column "movie.year";
    .

map:hasName_ClassMap_director_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_director;
    d2rq:property base:hasName;
    d2rq:column "director.name";
    .

map:hasBirth_year_ClassMap_director_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_director;
    d2rq:property base:hasBirth_year;
    d2rq:column "director.birth_year";
    .

map:hasId_ClassMap_movie_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_movie;
    d2rq:property base:hasId;
    d2rq:column "movie.id";
    .

map:hasTitle_ClassMap_movie_None a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_movie;
    d2rq:property base:hasTitle;
    d2rq:column "movie.title";
    .

map:hasDirector_ClassMap_movie_ClassMap_director a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:ClassMap_movie;
    d2rq:refersToClassMap map:ClassMap_director;
    d2rq:property base:hasDirector;
    d2rq:join "director.name  =  movie.director";
    .

