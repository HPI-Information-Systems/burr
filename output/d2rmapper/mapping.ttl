@prefix map: <#> .
@prefix db: <> .
@prefix vocab: <vocab/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix d2rq: <http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#> .
@prefix jdbc: <http://d2rq.org/terms/jdbc/> .

map:database a d2rq:Database;
	d2rq:jdbcDriver "org.postgresql.Driver";
	d2rq:jdbcDSN "jdbc:postgresql://localhost:5432/real_world__mondial__fk";
	d2rq:username "lukaslaskowski";
	d2rq:password "password";
	.

# Table borders
map:borders a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "borders/@@borders.country1|urlify@@/@@borders.country2|urlify@@";
	d2rq:class vocab:borders;
	d2rq:classDefinitionLabel "borders";
	.
map:borders__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:borders;
	d2rq:property rdfs:label;
	d2rq:pattern "borders #@@borders.country1@@/@@borders.country2@@";
	.
map:borders_length a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:borders;
	d2rq:property vocab:borders_length;
	d2rq:propertyDefinitionLabel "borders length";
	d2rq:column "borders.length";
	d2rq:datatype xsd:decimal;
	.
map:borders_country1__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:borders;
	d2rq:property vocab:borders_country1;
	d2rq:refersToClassMap map:country;
	d2rq:join "borders.country1 => country.code";
	.
map:borders_country2__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:borders;
	d2rq:property vocab:borders_country2;
	d2rq:refersToClassMap map:country;
	d2rq:join "borders.country2 => country.code";
	.

# Table city
map:city a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "city/@@city.name|urlify@@/@@city.country|urlify@@/@@city.province|urlify@@";
	d2rq:class vocab:city;
	d2rq:classDefinitionLabel "city";
	.
map:city__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:city;
	d2rq:property rdfs:label;
	d2rq:pattern "city #@@city.name@@/@@city.country@@/@@city.province@@";
	.
map:city_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:city;
	d2rq:property vocab:city_name;
	d2rq:propertyDefinitionLabel "city name";
	d2rq:column "city.name";
	.
map:city_population a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:city;
	d2rq:property vocab:city_population;
	d2rq:propertyDefinitionLabel "city population";
	d2rq:column "city.population";
	d2rq:datatype xsd:decimal;
	.
map:city_latitude a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:city;
	d2rq:property vocab:city_latitude;
	d2rq:propertyDefinitionLabel "city latitude";
	d2rq:column "city.latitude";
	d2rq:datatype xsd:decimal;
	.
map:city_longitude a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:city;
	d2rq:property vocab:city_longitude;
	d2rq:propertyDefinitionLabel "city longitude";
	d2rq:column "city.longitude";
	d2rq:datatype xsd:decimal;
	.
map:city_elevation a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:city;
	d2rq:property vocab:city_elevation;
	d2rq:propertyDefinitionLabel "city elevation";
	d2rq:column "city.elevation";
	d2rq:datatype xsd:decimal;
	.
map:city_country_province__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:city;
	d2rq:property vocab:city_country_province;
	d2rq:refersToClassMap map:province;
	d2rq:join "city.country => province.country";
	d2rq:join "city.province => province.name";
	.

# Table citylocalname
map:citylocalname a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "citylocalname/@@citylocalname.country|urlify@@/@@citylocalname.province|urlify@@/@@citylocalname.city|urlify@@";
	d2rq:class vocab:citylocalname;
	d2rq:classDefinitionLabel "citylocalname";
	.
map:citylocalname__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:citylocalname;
	d2rq:property rdfs:label;
	d2rq:pattern "citylocalname #@@citylocalname.country@@/@@citylocalname.province@@/@@citylocalname.city@@";
	.
map:citylocalname_localname a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:citylocalname;
	d2rq:property vocab:citylocalname_localname;
	d2rq:propertyDefinitionLabel "citylocalname localname";
	d2rq:column "citylocalname.localname";
	.
map:citylocalname_city_country_province__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:citylocalname;
	d2rq:property vocab:citylocalname_city_country_province;
	d2rq:refersToClassMap map:city;
	d2rq:join "citylocalname.city => city.name";
	d2rq:join "citylocalname.country => city.country";
	d2rq:join "citylocalname.province => city.province";
	.

# Table cityothername
map:cityothername a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "cityothername/@@cityothername.country|urlify@@/@@cityothername.province|urlify@@/@@cityothername.city|urlify@@/@@cityothername.othername|urlify@@";
	d2rq:class vocab:cityothername;
	d2rq:classDefinitionLabel "cityothername";
	.
map:cityothername__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:cityothername;
	d2rq:property rdfs:label;
	d2rq:pattern "cityothername #@@cityothername.country@@/@@cityothername.province@@/@@cityothername.city@@/@@cityothername.othername@@";
	.
map:cityothername_othername a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:cityothername;
	d2rq:property vocab:cityothername_othername;
	d2rq:propertyDefinitionLabel "cityothername othername";
	d2rq:column "cityothername.othername";
	.
map:cityothername_city_country_province__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:cityothername;
	d2rq:property vocab:cityothername_city_country_province;
	d2rq:refersToClassMap map:city;
	d2rq:join "cityothername.city => city.name";
	d2rq:join "cityothername.country => city.country";
	d2rq:join "cityothername.province => city.province";
	.

# Table citypops
map:citypops a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "citypops/@@citypops.country|urlify@@/@@citypops.province|urlify@@/@@citypops.city|urlify@@/@@citypops.year@@";
	d2rq:class vocab:citypops;
	d2rq:classDefinitionLabel "citypops";
	.
map:citypops__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:citypops;
	d2rq:property rdfs:label;
	d2rq:pattern "citypops #@@citypops.country@@/@@citypops.province@@/@@citypops.city@@/@@citypops.year@@";
	.
map:citypops_year a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:citypops;
	d2rq:property vocab:citypops_year;
	d2rq:propertyDefinitionLabel "citypops year";
	d2rq:column "citypops.year";
	d2rq:datatype xsd:decimal;
	.
map:citypops_population a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:citypops;
	d2rq:property vocab:citypops_population;
	d2rq:propertyDefinitionLabel "citypops population";
	d2rq:column "citypops.population";
	d2rq:datatype xsd:decimal;
	.
map:citypops_city_country_province__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:citypops;
	d2rq:property vocab:citypops_city_country_province;
	d2rq:refersToClassMap map:city;
	d2rq:join "citypops.city => city.name";
	d2rq:join "citypops.country => city.country";
	d2rq:join "citypops.province => city.province";
	.

# Table continent
map:continent a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "continent/@@continent.name|urlify@@";
	d2rq:class vocab:continent;
	d2rq:classDefinitionLabel "continent";
	.
map:continent__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:continent;
	d2rq:property rdfs:label;
	d2rq:pattern "continent #@@continent.name@@";
	.
map:continent_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:continent;
	d2rq:property vocab:continent_name;
	d2rq:propertyDefinitionLabel "continent name";
	d2rq:column "continent.name";
	.
map:continent_area a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:continent;
	d2rq:property vocab:continent_area;
	d2rq:propertyDefinitionLabel "continent area";
	d2rq:column "continent.area";
	d2rq:datatype xsd:decimal;
	.

# Table country
map:country a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "country/@@country.code|urlify@@";
	d2rq:class vocab:country;
	d2rq:classDefinitionLabel "country";
	.
map:country__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:country;
	d2rq:property rdfs:label;
	d2rq:pattern "country #@@country.code@@";
	.
map:country_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:country;
	d2rq:property vocab:country_name;
	d2rq:propertyDefinitionLabel "country name";
	d2rq:column "country.name";
	.
map:country_area a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:country;
	d2rq:property vocab:country_area;
	d2rq:propertyDefinitionLabel "country area";
	d2rq:column "country.area";
	d2rq:datatype xsd:decimal;
	.
map:country_population a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:country;
	d2rq:property vocab:country_population;
	d2rq:propertyDefinitionLabel "country population";
	d2rq:column "country.population";
	d2rq:datatype xsd:decimal;
	.
map:country_capital_code_province__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:country;
	d2rq:property vocab:country_capital_code_province;
	d2rq:refersToClassMap map:city;
	d2rq:join "country.capital => city.name";
	d2rq:join "country.code => city.country";
	d2rq:join "country.province => city.province";
	.

# Table countrylocalname
map:countrylocalname a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "countrylocalname/@@countrylocalname.country|urlify@@";
	d2rq:class vocab:countrylocalname;
	d2rq:classDefinitionLabel "countrylocalname";
	.
map:countrylocalname__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:countrylocalname;
	d2rq:property rdfs:label;
	d2rq:pattern "countrylocalname #@@countrylocalname.country@@";
	.
map:countrylocalname_country a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:countrylocalname;
	d2rq:property vocab:countrylocalname_country;
	d2rq:propertyDefinitionLabel "countrylocalname country";
	d2rq:column "countrylocalname.country";
	.
map:countrylocalname_localname a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:countrylocalname;
	d2rq:property vocab:countrylocalname_localname;
	d2rq:propertyDefinitionLabel "countrylocalname localname";
	d2rq:column "countrylocalname.localname";
	.

# Table countryothername
map:countryothername a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "countryothername/@@countryothername.country|urlify@@/@@countryothername.othername|urlify@@";
	d2rq:class vocab:countryothername;
	d2rq:classDefinitionLabel "countryothername";
	.
map:countryothername__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:countryothername;
	d2rq:property rdfs:label;
	d2rq:pattern "countryothername #@@countryothername.country@@/@@countryothername.othername@@";
	.
map:countryothername_country a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:countryothername;
	d2rq:property vocab:countryothername_country;
	d2rq:propertyDefinitionLabel "countryothername country";
	d2rq:column "countryothername.country";
	.
map:countryothername_othername a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:countryothername;
	d2rq:property vocab:countryothername_othername;
	d2rq:propertyDefinitionLabel "countryothername othername";
	d2rq:column "countryothername.othername";
	.

# Table countrypops
map:countrypops a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "countrypops/@@countrypops.country|urlify@@/@@countrypops.year@@";
	d2rq:class vocab:countrypops;
	d2rq:classDefinitionLabel "countrypops";
	.
map:countrypops__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:countrypops;
	d2rq:property rdfs:label;
	d2rq:pattern "countrypops #@@countrypops.country@@/@@countrypops.year@@";
	.
map:countrypops_year a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:countrypops;
	d2rq:property vocab:countrypops_year;
	d2rq:propertyDefinitionLabel "countrypops year";
	d2rq:column "countrypops.year";
	d2rq:datatype xsd:decimal;
	.
map:countrypops_population a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:countrypops;
	d2rq:property vocab:countrypops_population;
	d2rq:propertyDefinitionLabel "countrypops population";
	d2rq:column "countrypops.population";
	d2rq:datatype xsd:decimal;
	.
map:countrypops_country__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:countrypops;
	d2rq:property vocab:countrypops_country;
	d2rq:refersToClassMap map:country;
	d2rq:join "countrypops.country => country.code";
	.

# Table desert
map:desert a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "desert/@@desert.name|urlify@@";
	d2rq:class vocab:desert;
	d2rq:classDefinitionLabel "desert";
	.
map:desert__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:desert;
	d2rq:property rdfs:label;
	d2rq:pattern "desert #@@desert.name@@";
	.
map:desert_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:desert;
	d2rq:property vocab:desert_name;
	d2rq:propertyDefinitionLabel "desert name";
	d2rq:column "desert.name";
	.
map:desert_area a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:desert;
	d2rq:property vocab:desert_area;
	d2rq:propertyDefinitionLabel "desert area";
	d2rq:column "desert.area";
	d2rq:datatype xsd:decimal;
	.
map:desert_latitude a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:desert;
	d2rq:property vocab:desert_latitude;
	d2rq:propertyDefinitionLabel "desert latitude";
	d2rq:column "desert.latitude";
	d2rq:datatype xsd:decimal;
	.
map:desert_longitude a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:desert;
	d2rq:property vocab:desert_longitude;
	d2rq:propertyDefinitionLabel "desert longitude";
	d2rq:column "desert.longitude";
	d2rq:datatype xsd:decimal;
	.

# Table economy
map:economy a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "economy/@@economy.country|urlify@@";
	d2rq:class vocab:economy;
	d2rq:classDefinitionLabel "economy";
	.
map:economy__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:economy;
	d2rq:property rdfs:label;
	d2rq:pattern "economy #@@economy.country@@";
	.
map:economy_gdp a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:economy;
	d2rq:property vocab:economy_gdp;
	d2rq:propertyDefinitionLabel "economy gdp";
	d2rq:column "economy.gdp";
	d2rq:datatype xsd:decimal;
	.
map:economy_agriculture a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:economy;
	d2rq:property vocab:economy_agriculture;
	d2rq:propertyDefinitionLabel "economy agriculture";
	d2rq:column "economy.agriculture";
	d2rq:datatype xsd:decimal;
	.
map:economy_service a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:economy;
	d2rq:property vocab:economy_service;
	d2rq:propertyDefinitionLabel "economy service";
	d2rq:column "economy.service";
	d2rq:datatype xsd:decimal;
	.
map:economy_industry a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:economy;
	d2rq:property vocab:economy_industry;
	d2rq:propertyDefinitionLabel "economy industry";
	d2rq:column "economy.industry";
	d2rq:datatype xsd:decimal;
	.
map:economy_inflation a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:economy;
	d2rq:property vocab:economy_inflation;
	d2rq:propertyDefinitionLabel "economy inflation";
	d2rq:column "economy.inflation";
	d2rq:datatype xsd:decimal;
	.
map:economy_unemployment a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:economy;
	d2rq:property vocab:economy_unemployment;
	d2rq:propertyDefinitionLabel "economy unemployment";
	d2rq:column "economy.unemployment";
	d2rq:datatype xsd:decimal;
	.
map:economy_country__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:economy;
	d2rq:property vocab:economy_country;
	d2rq:refersToClassMap map:country;
	d2rq:join "economy.country => country.code";
	.

# Table encompasses
map:encompasses a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "encompasses/@@encompasses.country|urlify@@/@@encompasses.continent|urlify@@";
	d2rq:class vocab:encompasses;
	d2rq:classDefinitionLabel "encompasses";
	.
map:encompasses__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:encompasses;
	d2rq:property rdfs:label;
	d2rq:pattern "encompasses #@@encompasses.country@@/@@encompasses.continent@@";
	.
map:encompasses_percentage a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:encompasses;
	d2rq:property vocab:encompasses_percentage;
	d2rq:propertyDefinitionLabel "encompasses percentage";
	d2rq:column "encompasses.percentage";
	d2rq:datatype xsd:decimal;
	.
map:encompasses_country__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:encompasses;
	d2rq:property vocab:encompasses_country;
	d2rq:refersToClassMap map:country;
	d2rq:join "encompasses.country => country.code";
	.
map:encompasses_continent__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:encompasses;
	d2rq:property vocab:encompasses_continent;
	d2rq:refersToClassMap map:continent;
	d2rq:join "encompasses.continent => continent.name";
	.

# Table ethnicgroup
map:ethnicgroup a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "ethnicgroup/@@ethnicgroup.name|urlify@@/@@ethnicgroup.country|urlify@@";
	d2rq:class vocab:ethnicgroup;
	d2rq:classDefinitionLabel "ethnicgroup";
	.
map:ethnicgroup__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ethnicgroup;
	d2rq:property rdfs:label;
	d2rq:pattern "ethnicgroup #@@ethnicgroup.name@@/@@ethnicgroup.country@@";
	.
map:ethnicgroup_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ethnicgroup;
	d2rq:property vocab:ethnicgroup_name;
	d2rq:propertyDefinitionLabel "ethnicgroup name";
	d2rq:column "ethnicgroup.name";
	.
map:ethnicgroup_percentage a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ethnicgroup;
	d2rq:property vocab:ethnicgroup_percentage;
	d2rq:propertyDefinitionLabel "ethnicgroup percentage";
	d2rq:column "ethnicgroup.percentage";
	d2rq:datatype xsd:decimal;
	.
map:ethnicgroup_country__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ethnicgroup;
	d2rq:property vocab:ethnicgroup_country;
	d2rq:refersToClassMap map:country;
	d2rq:join "ethnicgroup.country => country.code";
	.

# Table geo_desert
map:geo_desert a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "geo_desert/@@geo_desert.province|urlify@@/@@geo_desert.country|urlify@@/@@geo_desert.desert|urlify@@";
	d2rq:class vocab:geo_desert;
	d2rq:classDefinitionLabel "geo_desert";
	.
map:geo_desert__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_desert;
	d2rq:property rdfs:label;
	d2rq:pattern "geo_desert #@@geo_desert.province@@/@@geo_desert.country@@/@@geo_desert.desert@@";
	.
map:geo_desert_desert a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_desert;
	d2rq:property vocab:geo_desert_desert;
	d2rq:propertyDefinitionLabel "geo_desert desert";
	d2rq:column "geo_desert.desert";
	.
map:geo_desert_country a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_desert;
	d2rq:property vocab:geo_desert_country;
	d2rq:propertyDefinitionLabel "geo_desert country";
	d2rq:column "geo_desert.country";
	.
map:geo_desert_province a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_desert;
	d2rq:property vocab:geo_desert_province;
	d2rq:propertyDefinitionLabel "geo_desert province";
	d2rq:column "geo_desert.province";
	.

# Table geo_estuary
map:geo_estuary a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "geo_estuary/@@geo_estuary.province|urlify@@/@@geo_estuary.country|urlify@@/@@geo_estuary.river|urlify@@";
	d2rq:class vocab:geo_estuary;
	d2rq:classDefinitionLabel "geo_estuary";
	.
map:geo_estuary__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_estuary;
	d2rq:property rdfs:label;
	d2rq:pattern "geo_estuary #@@geo_estuary.province@@/@@geo_estuary.country@@/@@geo_estuary.river@@";
	.
map:geo_estuary_river a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_estuary;
	d2rq:property vocab:geo_estuary_river;
	d2rq:propertyDefinitionLabel "geo_estuary river";
	d2rq:column "geo_estuary.river";
	.
map:geo_estuary_country a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_estuary;
	d2rq:property vocab:geo_estuary_country;
	d2rq:propertyDefinitionLabel "geo_estuary country";
	d2rq:column "geo_estuary.country";
	.
map:geo_estuary_province a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_estuary;
	d2rq:property vocab:geo_estuary_province;
	d2rq:propertyDefinitionLabel "geo_estuary province";
	d2rq:column "geo_estuary.province";
	.

# Table geo_island
map:geo_island a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "geo_island/@@geo_island.province|urlify@@/@@geo_island.country|urlify@@/@@geo_island.island|urlify@@";
	d2rq:class vocab:geo_island;
	d2rq:classDefinitionLabel "geo_island";
	.
map:geo_island__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_island;
	d2rq:property rdfs:label;
	d2rq:pattern "geo_island #@@geo_island.province@@/@@geo_island.country@@/@@geo_island.island@@";
	.
map:geo_island_island a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_island;
	d2rq:property vocab:geo_island_island;
	d2rq:propertyDefinitionLabel "geo_island island";
	d2rq:column "geo_island.island";
	.
map:geo_island_country a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_island;
	d2rq:property vocab:geo_island_country;
	d2rq:propertyDefinitionLabel "geo_island country";
	d2rq:column "geo_island.country";
	.
map:geo_island_province a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_island;
	d2rq:property vocab:geo_island_province;
	d2rq:propertyDefinitionLabel "geo_island province";
	d2rq:column "geo_island.province";
	.

# Table geo_lake
map:geo_lake a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "geo_lake/@@geo_lake.province|urlify@@/@@geo_lake.country|urlify@@/@@geo_lake.lake|urlify@@";
	d2rq:class vocab:geo_lake;
	d2rq:classDefinitionLabel "geo_lake";
	.
map:geo_lake__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_lake;
	d2rq:property rdfs:label;
	d2rq:pattern "geo_lake #@@geo_lake.province@@/@@geo_lake.country@@/@@geo_lake.lake@@";
	.
map:geo_lake_lake a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_lake;
	d2rq:property vocab:geo_lake_lake;
	d2rq:propertyDefinitionLabel "geo_lake lake";
	d2rq:column "geo_lake.lake";
	.
map:geo_lake_country a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_lake;
	d2rq:property vocab:geo_lake_country;
	d2rq:propertyDefinitionLabel "geo_lake country";
	d2rq:column "geo_lake.country";
	.
map:geo_lake_province a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_lake;
	d2rq:property vocab:geo_lake_province;
	d2rq:propertyDefinitionLabel "geo_lake province";
	d2rq:column "geo_lake.province";
	.

# Table geo_mountain
map:geo_mountain a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "geo_mountain/@@geo_mountain.province|urlify@@/@@geo_mountain.country|urlify@@/@@geo_mountain.mountain|urlify@@";
	d2rq:class vocab:geo_mountain;
	d2rq:classDefinitionLabel "geo_mountain";
	.
map:geo_mountain__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_mountain;
	d2rq:property rdfs:label;
	d2rq:pattern "geo_mountain #@@geo_mountain.province@@/@@geo_mountain.country@@/@@geo_mountain.mountain@@";
	.
map:geo_mountain_mountain a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_mountain;
	d2rq:property vocab:geo_mountain_mountain;
	d2rq:propertyDefinitionLabel "geo_mountain mountain";
	d2rq:column "geo_mountain.mountain";
	.
map:geo_mountain_country a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_mountain;
	d2rq:property vocab:geo_mountain_country;
	d2rq:propertyDefinitionLabel "geo_mountain country";
	d2rq:column "geo_mountain.country";
	.
map:geo_mountain_province a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_mountain;
	d2rq:property vocab:geo_mountain_province;
	d2rq:propertyDefinitionLabel "geo_mountain province";
	d2rq:column "geo_mountain.province";
	.

# Table geo_river
map:geo_river a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "geo_river/@@geo_river.province|urlify@@/@@geo_river.country|urlify@@/@@geo_river.river|urlify@@";
	d2rq:class vocab:geo_river;
	d2rq:classDefinitionLabel "geo_river";
	.
map:geo_river__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_river;
	d2rq:property rdfs:label;
	d2rq:pattern "geo_river #@@geo_river.province@@/@@geo_river.country@@/@@geo_river.river@@";
	.
map:geo_river_river a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_river;
	d2rq:property vocab:geo_river_river;
	d2rq:propertyDefinitionLabel "geo_river river";
	d2rq:column "geo_river.river";
	.
map:geo_river_country a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_river;
	d2rq:property vocab:geo_river_country;
	d2rq:propertyDefinitionLabel "geo_river country";
	d2rq:column "geo_river.country";
	.
map:geo_river_province a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_river;
	d2rq:property vocab:geo_river_province;
	d2rq:propertyDefinitionLabel "geo_river province";
	d2rq:column "geo_river.province";
	.

# Table geo_sea
map:geo_sea a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "geo_sea/@@geo_sea.province|urlify@@/@@geo_sea.country|urlify@@/@@geo_sea.sea|urlify@@";
	d2rq:class vocab:geo_sea;
	d2rq:classDefinitionLabel "geo_sea";
	.
map:geo_sea__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_sea;
	d2rq:property rdfs:label;
	d2rq:pattern "geo_sea #@@geo_sea.province@@/@@geo_sea.country@@/@@geo_sea.sea@@";
	.
map:geo_sea_sea a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_sea;
	d2rq:property vocab:geo_sea_sea;
	d2rq:propertyDefinitionLabel "geo_sea sea";
	d2rq:column "geo_sea.sea";
	.
map:geo_sea_country a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_sea;
	d2rq:property vocab:geo_sea_country;
	d2rq:propertyDefinitionLabel "geo_sea country";
	d2rq:column "geo_sea.country";
	.
map:geo_sea_province a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_sea;
	d2rq:property vocab:geo_sea_province;
	d2rq:propertyDefinitionLabel "geo_sea province";
	d2rq:column "geo_sea.province";
	.

# Table geo_source
map:geo_source a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "geo_source/@@geo_source.province|urlify@@/@@geo_source.country|urlify@@/@@geo_source.river|urlify@@";
	d2rq:class vocab:geo_source;
	d2rq:classDefinitionLabel "geo_source";
	.
map:geo_source__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_source;
	d2rq:property rdfs:label;
	d2rq:pattern "geo_source #@@geo_source.province@@/@@geo_source.country@@/@@geo_source.river@@";
	.
map:geo_source_river a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_source;
	d2rq:property vocab:geo_source_river;
	d2rq:propertyDefinitionLabel "geo_source river";
	d2rq:column "geo_source.river";
	.
map:geo_source_country a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_source;
	d2rq:property vocab:geo_source_country;
	d2rq:propertyDefinitionLabel "geo_source country";
	d2rq:column "geo_source.country";
	.
map:geo_source_province a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:geo_source;
	d2rq:property vocab:geo_source_province;
	d2rq:propertyDefinitionLabel "geo_source province";
	d2rq:column "geo_source.province";
	.

# Table island
map:island a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "island/@@island.name|urlify@@";
	d2rq:class vocab:island;
	d2rq:classDefinitionLabel "island";
	.
map:island__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:island;
	d2rq:property rdfs:label;
	d2rq:pattern "island #@@island.name@@";
	.
map:island_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:island;
	d2rq:property vocab:island_name;
	d2rq:propertyDefinitionLabel "island name";
	d2rq:column "island.name";
	.
map:island_islands a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:island;
	d2rq:property vocab:island_islands;
	d2rq:propertyDefinitionLabel "island islands";
	d2rq:column "island.islands";
	.
map:island_area a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:island;
	d2rq:property vocab:island_area;
	d2rq:propertyDefinitionLabel "island area";
	d2rq:column "island.area";
	d2rq:datatype xsd:decimal;
	.
map:island_elevation a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:island;
	d2rq:property vocab:island_elevation;
	d2rq:propertyDefinitionLabel "island elevation";
	d2rq:column "island.elevation";
	d2rq:datatype xsd:decimal;
	.
map:island_type a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:island;
	d2rq:property vocab:island_type;
	d2rq:propertyDefinitionLabel "island type";
	d2rq:column "island.type";
	.
map:island_latitude a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:island;
	d2rq:property vocab:island_latitude;
	d2rq:propertyDefinitionLabel "island latitude";
	d2rq:column "island.latitude";
	d2rq:datatype xsd:decimal;
	.
map:island_longitude a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:island;
	d2rq:property vocab:island_longitude;
	d2rq:propertyDefinitionLabel "island longitude";
	d2rq:column "island.longitude";
	d2rq:datatype xsd:decimal;
	.

# Table islandin
map:islandin a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	# Sorry, I don't know which columns to put into the uriPattern
	#     for "islandin" because the table doesn't have a primary key.
	#     Please specify it manually.
	d2rq:uriPattern "islandin";
	d2rq:class vocab:islandin;
	d2rq:classDefinitionLabel "islandin";
	.
map:islandin_island a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:islandin;
	d2rq:property vocab:islandin_island;
	d2rq:propertyDefinitionLabel "islandin island";
	d2rq:column "islandin.island";
	.
map:islandin_sea a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:islandin;
	d2rq:property vocab:islandin_sea;
	d2rq:propertyDefinitionLabel "islandin sea";
	d2rq:column "islandin.sea";
	.
map:islandin_lake a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:islandin;
	d2rq:property vocab:islandin_lake;
	d2rq:propertyDefinitionLabel "islandin lake";
	d2rq:column "islandin.lake";
	.
map:islandin_river a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:islandin;
	d2rq:property vocab:islandin_river;
	d2rq:propertyDefinitionLabel "islandin river";
	d2rq:column "islandin.river";
	.

# Table ismember
map:ismember a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "ismember/@@ismember.country|urlify@@/@@ismember.organization|urlify@@";
	d2rq:class vocab:ismember;
	d2rq:classDefinitionLabel "ismember";
	.
map:ismember__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ismember;
	d2rq:property rdfs:label;
	d2rq:pattern "ismember #@@ismember.country@@/@@ismember.organization@@";
	.
map:ismember_type a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ismember;
	d2rq:property vocab:ismember_type;
	d2rq:propertyDefinitionLabel "ismember type";
	d2rq:column "ismember.type";
	.
map:ismember_country__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ismember;
	d2rq:property vocab:ismember_country;
	d2rq:refersToClassMap map:country;
	d2rq:join "ismember.country => country.code";
	.
map:ismember_organization__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ismember;
	d2rq:property vocab:ismember_organization;
	d2rq:refersToClassMap map:organization;
	d2rq:join "ismember.organization => organization.abbreviation";
	.

# Table lake
map:lake a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "lake/@@lake.name|urlify@@";
	d2rq:class vocab:lake;
	d2rq:classDefinitionLabel "lake";
	.
map:lake__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:lake;
	d2rq:property rdfs:label;
	d2rq:pattern "lake #@@lake.name@@";
	.
map:lake_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:lake;
	d2rq:property vocab:lake_name;
	d2rq:propertyDefinitionLabel "lake name";
	d2rq:column "lake.name";
	.
map:lake_area a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:lake;
	d2rq:property vocab:lake_area;
	d2rq:propertyDefinitionLabel "lake area";
	d2rq:column "lake.area";
	d2rq:datatype xsd:decimal;
	.
map:lake_elevation a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:lake;
	d2rq:property vocab:lake_elevation;
	d2rq:propertyDefinitionLabel "lake elevation";
	d2rq:column "lake.elevation";
	d2rq:datatype xsd:decimal;
	.
map:lake_depth a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:lake;
	d2rq:property vocab:lake_depth;
	d2rq:propertyDefinitionLabel "lake depth";
	d2rq:column "lake.depth";
	d2rq:datatype xsd:decimal;
	.
map:lake_height a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:lake;
	d2rq:property vocab:lake_height;
	d2rq:propertyDefinitionLabel "lake height";
	d2rq:column "lake.height";
	d2rq:datatype xsd:decimal;
	.
map:lake_type a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:lake;
	d2rq:property vocab:lake_type;
	d2rq:propertyDefinitionLabel "lake type";
	d2rq:column "lake.type";
	.
map:lake_latitude a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:lake;
	d2rq:property vocab:lake_latitude;
	d2rq:propertyDefinitionLabel "lake latitude";
	d2rq:column "lake.latitude";
	d2rq:datatype xsd:decimal;
	.
map:lake_longitude a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:lake;
	d2rq:property vocab:lake_longitude;
	d2rq:propertyDefinitionLabel "lake longitude";
	d2rq:column "lake.longitude";
	d2rq:datatype xsd:decimal;
	.
map:lake_river__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:lake;
	d2rq:property vocab:lake_river;
	d2rq:refersToClassMap map:river;
	d2rq:join "lake.river => river.name";
	.

# Table lakeonisland
map:lakeonisland a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "lakeonisland/@@lakeonisland.lake|urlify@@/@@lakeonisland.island|urlify@@";
	d2rq:class vocab:lakeonisland;
	d2rq:classDefinitionLabel "lakeonisland";
	.
map:lakeonisland__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:lakeonisland;
	d2rq:property rdfs:label;
	d2rq:pattern "lakeonisland #@@lakeonisland.lake@@/@@lakeonisland.island@@";
	.
map:lakeonisland_lake a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:lakeonisland;
	d2rq:property vocab:lakeonisland_lake;
	d2rq:propertyDefinitionLabel "lakeonisland lake";
	d2rq:column "lakeonisland.lake";
	.
map:lakeonisland_island a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:lakeonisland;
	d2rq:property vocab:lakeonisland_island;
	d2rq:propertyDefinitionLabel "lakeonisland island";
	d2rq:column "lakeonisland.island";
	.

# Table language
map:language a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "language/@@language.name|urlify@@";
	d2rq:class vocab:language;
	d2rq:classDefinitionLabel "language";
	.
map:language__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:language;
	d2rq:property rdfs:label;
	d2rq:pattern "language #@@language.name@@";
	.
map:language_superlanguage__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:language;
	d2rq:property vocab:language_superlanguage;
	d2rq:refersToClassMap map:language;
	d2rq:alias "language AS language__alias";
	d2rq:join "language.superlanguage => language__alias.name";
	.

# Table located
map:located a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	# Sorry, I don't know which columns to put into the uriPattern
	#     for "located" because the table doesn't have a primary key.
	#     Please specify it manually.
	d2rq:uriPattern "located";
	d2rq:class vocab:located;
	d2rq:classDefinitionLabel "located";
	.
map:located_city a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:located;
	d2rq:property vocab:located_city;
	d2rq:propertyDefinitionLabel "located city";
	d2rq:column "located.city";
	.
map:located_province a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:located;
	d2rq:property vocab:located_province;
	d2rq:propertyDefinitionLabel "located province";
	d2rq:column "located.province";
	.
map:located_country a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:located;
	d2rq:property vocab:located_country;
	d2rq:propertyDefinitionLabel "located country";
	d2rq:column "located.country";
	.
map:located_river a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:located;
	d2rq:property vocab:located_river;
	d2rq:propertyDefinitionLabel "located river";
	d2rq:column "located.river";
	.
map:located_lake a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:located;
	d2rq:property vocab:located_lake;
	d2rq:propertyDefinitionLabel "located lake";
	d2rq:column "located.lake";
	.
map:located_sea a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:located;
	d2rq:property vocab:located_sea;
	d2rq:propertyDefinitionLabel "located sea";
	d2rq:column "located.sea";
	.

# Table locatedon
map:locatedon a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "locatedon/@@locatedon.city|urlify@@/@@locatedon.province|urlify@@/@@locatedon.country|urlify@@/@@locatedon.island|urlify@@";
	d2rq:class vocab:locatedon;
	d2rq:classDefinitionLabel "locatedon";
	.
map:locatedon__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:locatedon;
	d2rq:property rdfs:label;
	d2rq:pattern "locatedon #@@locatedon.city@@/@@locatedon.province@@/@@locatedon.country@@/@@locatedon.island@@";
	.
map:locatedon_city a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:locatedon;
	d2rq:property vocab:locatedon_city;
	d2rq:propertyDefinitionLabel "locatedon city";
	d2rq:column "locatedon.city";
	.
map:locatedon_province a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:locatedon;
	d2rq:property vocab:locatedon_province;
	d2rq:propertyDefinitionLabel "locatedon province";
	d2rq:column "locatedon.province";
	.
map:locatedon_country a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:locatedon;
	d2rq:property vocab:locatedon_country;
	d2rq:propertyDefinitionLabel "locatedon country";
	d2rq:column "locatedon.country";
	.
map:locatedon_island a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:locatedon;
	d2rq:property vocab:locatedon_island;
	d2rq:propertyDefinitionLabel "locatedon island";
	d2rq:column "locatedon.island";
	.

# Table mergeswith
map:mergeswith a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "mergeswith/@@mergeswith.sea1|urlify@@/@@mergeswith.sea2|urlify@@";
	d2rq:class vocab:mergeswith;
	d2rq:classDefinitionLabel "mergeswith";
	.
map:mergeswith__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:mergeswith;
	d2rq:property rdfs:label;
	d2rq:pattern "mergeswith #@@mergeswith.sea1@@/@@mergeswith.sea2@@";
	.
map:mergeswith_sea1 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:mergeswith;
	d2rq:property vocab:mergeswith_sea1;
	d2rq:propertyDefinitionLabel "mergeswith sea1";
	d2rq:column "mergeswith.sea1";
	.
map:mergeswith_sea2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:mergeswith;
	d2rq:property vocab:mergeswith_sea2;
	d2rq:propertyDefinitionLabel "mergeswith sea2";
	d2rq:column "mergeswith.sea2";
	.

# Table mountain
map:mountain a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "mountain/@@mountain.name|urlify@@";
	d2rq:class vocab:mountain;
	d2rq:classDefinitionLabel "mountain";
	.
map:mountain__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:mountain;
	d2rq:property rdfs:label;
	d2rq:pattern "mountain #@@mountain.name@@";
	.
map:mountain_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:mountain;
	d2rq:property vocab:mountain_name;
	d2rq:propertyDefinitionLabel "mountain name";
	d2rq:column "mountain.name";
	.
map:mountain_mountains a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:mountain;
	d2rq:property vocab:mountain_mountains;
	d2rq:propertyDefinitionLabel "mountain mountains";
	d2rq:column "mountain.mountains";
	.
map:mountain_elevation a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:mountain;
	d2rq:property vocab:mountain_elevation;
	d2rq:propertyDefinitionLabel "mountain elevation";
	d2rq:column "mountain.elevation";
	d2rq:datatype xsd:decimal;
	.
map:mountain_type a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:mountain;
	d2rq:property vocab:mountain_type;
	d2rq:propertyDefinitionLabel "mountain type";
	d2rq:column "mountain.type";
	.
map:mountain_latitude a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:mountain;
	d2rq:property vocab:mountain_latitude;
	d2rq:propertyDefinitionLabel "mountain latitude";
	d2rq:column "mountain.latitude";
	d2rq:datatype xsd:decimal;
	.
map:mountain_longitude a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:mountain;
	d2rq:property vocab:mountain_longitude;
	d2rq:propertyDefinitionLabel "mountain longitude";
	d2rq:column "mountain.longitude";
	d2rq:datatype xsd:decimal;
	.

# Table mountainonisland
map:mountainonisland a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "mountainonisland/@@mountainonisland.mountain|urlify@@/@@mountainonisland.island|urlify@@";
	d2rq:class vocab:mountainonisland;
	d2rq:classDefinitionLabel "mountainonisland";
	.
map:mountainonisland__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:mountainonisland;
	d2rq:property rdfs:label;
	d2rq:pattern "mountainonisland #@@mountainonisland.mountain@@/@@mountainonisland.island@@";
	.
map:mountainonisland_mountain a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:mountainonisland;
	d2rq:property vocab:mountainonisland_mountain;
	d2rq:propertyDefinitionLabel "mountainonisland mountain";
	d2rq:column "mountainonisland.mountain";
	.
map:mountainonisland_island a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:mountainonisland;
	d2rq:property vocab:mountainonisland_island;
	d2rq:propertyDefinitionLabel "mountainonisland island";
	d2rq:column "mountainonisland.island";
	.

# Table organization
map:organization a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "organization/@@organization.abbreviation|urlify@@";
	d2rq:class vocab:organization;
	d2rq:classDefinitionLabel "organization";
	.
map:organization__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:organization;
	d2rq:property rdfs:label;
	d2rq:pattern "organization #@@organization.abbreviation@@";
	.
map:organization_abbreviation a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:organization;
	d2rq:property vocab:organization_abbreviation;
	d2rq:propertyDefinitionLabel "organization abbreviation";
	d2rq:column "organization.abbreviation";
	.
map:organization_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:organization;
	d2rq:property vocab:organization_name;
	d2rq:propertyDefinitionLabel "organization name";
	d2rq:column "organization.name";
	.
map:organization_established a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:organization;
	d2rq:property vocab:organization_established;
	d2rq:propertyDefinitionLabel "organization established";
	d2rq:column "organization.established";
	d2rq:datatype xsd:date;
	.
map:organization_city_country_province__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:organization;
	d2rq:property vocab:organization_city_country_province;
	d2rq:refersToClassMap map:city;
	d2rq:join "organization.city => city.name";
	d2rq:join "organization.country => city.country";
	d2rq:join "organization.province => city.province";
	.

# Table politics
map:politics a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "politics/@@politics.country|urlify@@";
	d2rq:class vocab:politics;
	d2rq:classDefinitionLabel "politics";
	.
map:politics__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:politics;
	d2rq:property rdfs:label;
	d2rq:pattern "politics #@@politics.country@@";
	.
map:politics_independence a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:politics;
	d2rq:property vocab:politics_independence;
	d2rq:propertyDefinitionLabel "politics independence";
	d2rq:column "politics.independence";
	d2rq:datatype xsd:date;
	.
map:politics_wasdependent a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:politics;
	d2rq:property vocab:politics_wasdependent;
	d2rq:propertyDefinitionLabel "politics wasdependent";
	d2rq:column "politics.wasdependent";
	.
map:politics_government a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:politics;
	d2rq:property vocab:politics_government;
	d2rq:propertyDefinitionLabel "politics government";
	d2rq:column "politics.government";
	.
map:politics_country__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:politics;
	d2rq:property vocab:politics_country;
	d2rq:refersToClassMap map:country;
	d2rq:join "politics.country => country.code";
	.
map:politics_dependent__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:politics;
	d2rq:property vocab:politics_dependent;
	d2rq:refersToClassMap map:country;
	d2rq:join "politics.dependent => country.code";
	.

# Table population
map:population a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "population/@@population.country|urlify@@";
	d2rq:class vocab:population;
	d2rq:classDefinitionLabel "population";
	.
map:population__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:population;
	d2rq:property rdfs:label;
	d2rq:pattern "population #@@population.country@@";
	.
map:population_population_growth a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:population;
	d2rq:property vocab:population_population_growth;
	d2rq:propertyDefinitionLabel "population population_growth";
	d2rq:column "population.population_growth";
	d2rq:datatype xsd:decimal;
	.
map:population_infant_mortality a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:population;
	d2rq:property vocab:population_infant_mortality;
	d2rq:propertyDefinitionLabel "population infant_mortality";
	d2rq:column "population.infant_mortality";
	d2rq:datatype xsd:decimal;
	.
map:population_country__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:population;
	d2rq:property vocab:population_country;
	d2rq:refersToClassMap map:country;
	d2rq:join "population.country => country.code";
	.

# Table province
map:province a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "province/@@province.name|urlify@@/@@province.country|urlify@@";
	d2rq:class vocab:province;
	d2rq:classDefinitionLabel "province";
	.
map:province__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:province;
	d2rq:property rdfs:label;
	d2rq:pattern "province #@@province.name@@/@@province.country@@";
	.
map:province_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:province;
	d2rq:property vocab:province_name;
	d2rq:propertyDefinitionLabel "province name";
	d2rq:column "province.name";
	.
map:province_population a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:province;
	d2rq:property vocab:province_population;
	d2rq:propertyDefinitionLabel "province population";
	d2rq:column "province.population";
	d2rq:datatype xsd:decimal;
	.
map:province_area a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:province;
	d2rq:property vocab:province_area;
	d2rq:propertyDefinitionLabel "province area";
	d2rq:column "province.area";
	d2rq:datatype xsd:decimal;
	.
map:province_capital_country_capprov__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:province;
	d2rq:property vocab:province_capital_country_capprov;
	d2rq:refersToClassMap map:city;
	d2rq:join "province.capital => city.name";
	d2rq:join "province.country => city.country";
	d2rq:join "province.capprov => city.province";
	.
map:province_country__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:province;
	d2rq:property vocab:province_country;
	d2rq:refersToClassMap map:country;
	d2rq:join "province.country => country.code";
	.

# Table provincelocalname
map:provincelocalname a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "provincelocalname/@@provincelocalname.country|urlify@@/@@provincelocalname.province|urlify@@";
	d2rq:class vocab:provincelocalname;
	d2rq:classDefinitionLabel "provincelocalname";
	.
map:provincelocalname__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:provincelocalname;
	d2rq:property rdfs:label;
	d2rq:pattern "provincelocalname #@@provincelocalname.country@@/@@provincelocalname.province@@";
	.
map:provincelocalname_localname a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:provincelocalname;
	d2rq:property vocab:provincelocalname_localname;
	d2rq:propertyDefinitionLabel "provincelocalname localname";
	d2rq:column "provincelocalname.localname";
	.
map:provincelocalname_country_province__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:provincelocalname;
	d2rq:property vocab:provincelocalname_country_province;
	d2rq:refersToClassMap map:province;
	d2rq:join "provincelocalname.country => province.country";
	d2rq:join "provincelocalname.province => province.name";
	.

# Table provinceothername
map:provinceothername a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "provinceothername/@@provinceothername.country|urlify@@/@@provinceothername.province|urlify@@/@@provinceothername.othername|urlify@@";
	d2rq:class vocab:provinceothername;
	d2rq:classDefinitionLabel "provinceothername";
	.
map:provinceothername__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:provinceothername;
	d2rq:property rdfs:label;
	d2rq:pattern "provinceothername #@@provinceothername.country@@/@@provinceothername.province@@/@@provinceothername.othername@@";
	.
map:provinceothername_othername a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:provinceothername;
	d2rq:property vocab:provinceothername_othername;
	d2rq:propertyDefinitionLabel "provinceothername othername";
	d2rq:column "provinceothername.othername";
	.
map:provinceothername_country_province__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:provinceothername;
	d2rq:property vocab:provinceothername_country_province;
	d2rq:refersToClassMap map:province;
	d2rq:join "provinceothername.country => province.country";
	d2rq:join "provinceothername.province => province.name";
	.

# Table provpops
map:provpops a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "provpops/@@provpops.country|urlify@@/@@provpops.province|urlify@@/@@provpops.year@@";
	d2rq:class vocab:provpops;
	d2rq:classDefinitionLabel "provpops";
	.
map:provpops__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:provpops;
	d2rq:property rdfs:label;
	d2rq:pattern "provpops #@@provpops.country@@/@@provpops.province@@/@@provpops.year@@";
	.
map:provpops_year a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:provpops;
	d2rq:property vocab:provpops_year;
	d2rq:propertyDefinitionLabel "provpops year";
	d2rq:column "provpops.year";
	d2rq:datatype xsd:decimal;
	.
map:provpops_population a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:provpops;
	d2rq:property vocab:provpops_population;
	d2rq:propertyDefinitionLabel "provpops population";
	d2rq:column "provpops.population";
	d2rq:datatype xsd:decimal;
	.
map:provpops_country_province__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:provpops;
	d2rq:property vocab:provpops_country_province;
	d2rq:refersToClassMap map:province;
	d2rq:join "provpops.country => province.country";
	d2rq:join "provpops.province => province.name";
	.

# Table religion
map:religion a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "religion/@@religion.name|urlify@@/@@religion.country|urlify@@";
	d2rq:class vocab:religion;
	d2rq:classDefinitionLabel "religion";
	.
map:religion__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:religion;
	d2rq:property rdfs:label;
	d2rq:pattern "religion #@@religion.name@@/@@religion.country@@";
	.
map:religion_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:religion;
	d2rq:property vocab:religion_name;
	d2rq:propertyDefinitionLabel "religion name";
	d2rq:column "religion.name";
	.
map:religion_percentage a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:religion;
	d2rq:property vocab:religion_percentage;
	d2rq:propertyDefinitionLabel "religion percentage";
	d2rq:column "religion.percentage";
	d2rq:datatype xsd:decimal;
	.
map:religion_country__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:religion;
	d2rq:property vocab:religion_country;
	d2rq:refersToClassMap map:country;
	d2rq:join "religion.country => country.code";
	.

# Table river
map:river a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "river/@@river.name|urlify@@";
	d2rq:class vocab:river;
	d2rq:classDefinitionLabel "river";
	.
map:river__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:river;
	d2rq:property rdfs:label;
	d2rq:pattern "river #@@river.name@@";
	.
map:river_length a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:river;
	d2rq:property vocab:river_length;
	d2rq:propertyDefinitionLabel "river length";
	d2rq:column "river.length";
	d2rq:datatype xsd:decimal;
	.
map:river_area a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:river;
	d2rq:property vocab:river_area;
	d2rq:propertyDefinitionLabel "river area";
	d2rq:column "river.area";
	d2rq:datatype xsd:decimal;
	.
map:river_sourcelatitude a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:river;
	d2rq:property vocab:river_sourcelatitude;
	d2rq:propertyDefinitionLabel "river sourcelatitude";
	d2rq:column "river.sourcelatitude";
	d2rq:datatype xsd:decimal;
	.
map:river_sourcelongitude a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:river;
	d2rq:property vocab:river_sourcelongitude;
	d2rq:propertyDefinitionLabel "river sourcelongitude";
	d2rq:column "river.sourcelongitude";
	d2rq:datatype xsd:decimal;
	.
map:river_mountains a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:river;
	d2rq:property vocab:river_mountains;
	d2rq:propertyDefinitionLabel "river mountains";
	d2rq:column "river.mountains";
	.
map:river_sourceelevation a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:river;
	d2rq:property vocab:river_sourceelevation;
	d2rq:propertyDefinitionLabel "river sourceelevation";
	d2rq:column "river.sourceelevation";
	d2rq:datatype xsd:decimal;
	.
map:river_estuarylatitude a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:river;
	d2rq:property vocab:river_estuarylatitude;
	d2rq:propertyDefinitionLabel "river estuarylatitude";
	d2rq:column "river.estuarylatitude";
	d2rq:datatype xsd:decimal;
	.
map:river_estuarylongitude a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:river;
	d2rq:property vocab:river_estuarylongitude;
	d2rq:propertyDefinitionLabel "river estuarylongitude";
	d2rq:column "river.estuarylongitude";
	d2rq:datatype xsd:decimal;
	.
map:river_estuaryelevation a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:river;
	d2rq:property vocab:river_estuaryelevation;
	d2rq:propertyDefinitionLabel "river estuaryelevation";
	d2rq:column "river.estuaryelevation";
	d2rq:datatype xsd:decimal;
	.
map:river_lake__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:river;
	d2rq:property vocab:river_lake;
	d2rq:refersToClassMap map:lake;
	d2rq:join "river.lake => lake.name";
	.
map:river_river__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:river;
	d2rq:property vocab:river_river;
	d2rq:refersToClassMap map:river;
	d2rq:alias "river AS river__alias";
	d2rq:join "river.river => river__alias.name";
	.
map:river_sea__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:river;
	d2rq:property vocab:river_sea;
	d2rq:refersToClassMap map:sea;
	d2rq:join "river.sea => sea.name";
	.

# Table riveronisland
map:riveronisland a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "riveronisland/@@riveronisland.river|urlify@@/@@riveronisland.island|urlify@@";
	d2rq:class vocab:riveronisland;
	d2rq:classDefinitionLabel "riveronisland";
	.
map:riveronisland__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:riveronisland;
	d2rq:property rdfs:label;
	d2rq:pattern "riveronisland #@@riveronisland.river@@/@@riveronisland.island@@";
	.
map:riveronisland_river a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:riveronisland;
	d2rq:property vocab:riveronisland_river;
	d2rq:propertyDefinitionLabel "riveronisland river";
	d2rq:column "riveronisland.river";
	.
map:riveronisland_island a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:riveronisland;
	d2rq:property vocab:riveronisland_island;
	d2rq:propertyDefinitionLabel "riveronisland island";
	d2rq:column "riveronisland.island";
	.

# Table riverthrough (n:m)
map:riverthrough__link a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:lake;
	d2rq:property vocab:riverthrough;
	d2rq:refersToClassMap map:river;
	d2rq:join "riverthrough.lake => lake.name";
	d2rq:join "riverthrough.river => river.name";
	.

# Table sea
map:sea a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "sea/@@sea.name|urlify@@";
	d2rq:class vocab:sea;
	d2rq:classDefinitionLabel "sea";
	.
map:sea__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:sea;
	d2rq:property rdfs:label;
	d2rq:pattern "sea #@@sea.name@@";
	.
map:sea_name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:sea;
	d2rq:property vocab:sea_name;
	d2rq:propertyDefinitionLabel "sea name";
	d2rq:column "sea.name";
	.
map:sea_area a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:sea;
	d2rq:property vocab:sea_area;
	d2rq:propertyDefinitionLabel "sea area";
	d2rq:column "sea.area";
	d2rq:datatype xsd:decimal;
	.
map:sea_depth a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:sea;
	d2rq:property vocab:sea_depth;
	d2rq:propertyDefinitionLabel "sea depth";
	d2rq:column "sea.depth";
	d2rq:datatype xsd:decimal;
	.

# Table spoken
map:spoken a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "spoken/@@spoken.country|urlify@@/@@spoken.language|urlify@@";
	d2rq:class vocab:spoken;
	d2rq:classDefinitionLabel "spoken";
	.
map:spoken__label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:spoken;
	d2rq:property rdfs:label;
	d2rq:pattern "spoken #@@spoken.country@@/@@spoken.language@@";
	.
map:spoken_percentage a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:spoken;
	d2rq:property vocab:spoken_percentage;
	d2rq:propertyDefinitionLabel "spoken percentage";
	d2rq:column "spoken.percentage";
	d2rq:datatype xsd:decimal;
	.
map:spoken_language__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:spoken;
	d2rq:property vocab:spoken_language;
	d2rq:refersToClassMap map:language;
	d2rq:join "spoken.language => language.name";
	.
map:spoken_country__ref a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:spoken;
	d2rq:property vocab:spoken_country;
	d2rq:refersToClassMap map:country;
	d2rq:join "spoken.country => country.code";
	.

